// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UmutYapi.Models.Context;

#nullable disable

namespace UmutYapi.Migrations
{
    [DbContext(typeof(YapiMalzemeContext))]
    [Migration("20240601191954_init99")]
    partial class init99
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("UmutYapi.Models.Tablolar.Kullanici", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Fotograf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sehir")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SepetId")
                        .HasColumnType("int");

                    b.Property<string>("Soyad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Ulke")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("SepetId")
                        .IsUnique()
                        .HasFilter("[SepetId] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("UmutYapi.Models.Tablolar.Sepet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("KullaniciId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Sepetler");
                });

            modelBuilder.Entity("UmutYapi.Models.Tablolar.SepetItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("SatınAlınacakAdet")
                        .HasColumnType("int");

                    b.Property<int>("SepetId")
                        .HasColumnType("int");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SepetId");

                    b.ToTable("SepetItemler");
                });

            modelBuilder.Entity("UmutYapi.Models.Tablolar.Siparis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("KullaniciId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SatınAlmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SiparisTutarı")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.ToTable("Siparisler");
                });

            modelBuilder.Entity("UmutYapi.Models.Tablolar.SiparisItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Adet")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("SiparisId")
                        .HasColumnType("int");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SiparisId");

                    b.ToTable("SiparisItems");
                });

            modelBuilder.Entity("UmutYapi.Models.Tablolar.Urun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("StokAdeti")
                        .HasColumnType("int");

                    b.Property<string>("StokAdetiBirimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrunAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UrunFiyati")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UrunFoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrunKodu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.ToTable("Urunler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Aciklama = "50KG",
                            KategoriId = 1,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9475),
                            StokAdeti = 1900,
                            StokAdetiBirimi = "Kg",
                            UrunAdi = "Çimento",
                            UrunFiyati = 200m,
                            UrunFoto = "çimento.jpg",
                            UrunKodu = "B-0001"
                        },
                        new
                        {
                            Id = 2,
                            Aciklama = "İnce Kum",
                            KategoriId = 1,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9479),
                            StokAdeti = 10000,
                            StokAdetiBirimi = "Ton",
                            UrunAdi = "Kum",
                            UrunFiyati = 60m,
                            UrunFoto = "kum.jpg",
                            UrunKodu = "B-0002"
                        },
                        new
                        {
                            Id = 3,
                            Aciklama = "Kırma Çakıl",
                            KategoriId = 1,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9483),
                            StokAdeti = 8000,
                            StokAdetiBirimi = "Ton",
                            UrunAdi = "Çakıl",
                            UrunFiyati = 240m,
                            UrunFoto = "çakıl.jpg",
                            UrunKodu = "B-0003"
                        },
                        new
                        {
                            Id = 4,
                            Aciklama = "5cm",
                            KategoriId = 2,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9485),
                            StokAdeti = 700,
                            StokAdetiBirimi = "m3",
                            UrunAdi = "Strafor",
                            UrunFiyati = 250m,
                            UrunFoto = "strafor.jpg",
                            UrunKodu = "Y-0001"
                        },
                        new
                        {
                            Id = 5,
                            Aciklama = "10cm",
                            KategoriId = 2,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9488),
                            StokAdeti = 650,
                            StokAdetiBirimi = "m3",
                            UrunAdi = "Cam Yünü",
                            UrunFiyati = 300m,
                            UrunFoto = "cam yünü.jpg",
                            UrunKodu = "Y-0002"
                        },
                        new
                        {
                            Id = 6,
                            Aciklama = "5cm",
                            KategoriId = 2,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9490),
                            StokAdeti = 500,
                            StokAdetiBirimi = "m3",
                            UrunAdi = "Taş yünü",
                            UrunFiyati = 400m,
                            UrunFoto = "taş yünü.jpg",
                            UrunKodu = "Y-0003"
                        },
                        new
                        {
                            Id = 7,
                            Aciklama = "3mm",
                            KategoriId = 2,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9492),
                            StokAdeti = 1000,
                            StokAdetiBirimi = "m3",
                            UrunAdi = "Su Yalıtım Membranı",
                            UrunFiyati = 50m,
                            UrunFoto = "su membranı.jpg",
                            UrunKodu = "Y-0004"
                        },
                        new
                        {
                            Id = 8,
                            Aciklama = "40mm",
                            KategoriId = 2,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9495),
                            StokAdeti = 150,
                            StokAdetiBirimi = "Adet",
                            UrunAdi = "Akustik Panel",
                            UrunFiyati = 50m,
                            UrunFoto = "akustik panel.jpg",
                            UrunKodu = "Y-0005"
                        },
                        new
                        {
                            Id = 9,
                            Aciklama = "Yığma",
                            KategoriId = 3,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9497),
                            StokAdeti = 5000,
                            StokAdetiBirimi = "Adet",
                            UrunAdi = "Tuğla",
                            UrunFiyati = 7m,
                            UrunFoto = "tuğla1.jpg",
                            UrunKodu = "D-0001"
                        },
                        new
                        {
                            Id = 10,
                            Aciklama = "5'lik",
                            KategoriId = 3,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9499),
                            StokAdeti = 3000,
                            StokAdetiBirimi = "Adet",
                            UrunAdi = "Ytong",
                            UrunFiyati = 190m,
                            UrunFoto = "ytong tuğla.jpg",
                            UrunKodu = "D-0002"
                        },
                        new
                        {
                            Id = 11,
                            Aciklama = "G4",
                            KategoriId = 3,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9501),
                            StokAdeti = 2800,
                            StokAdetiBirimi = "Adet",
                            UrunAdi = "Gaz Beton",
                            UrunFiyati = 180m,
                            UrunFoto = "gaz beton.jpg",
                            UrunKodu = "D-0003"
                        },
                        new
                        {
                            Id = 12,
                            Aciklama = "Duvar Karosu",
                            KategoriId = 3,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9508),
                            StokAdeti = 3000,
                            StokAdetiBirimi = "m3",
                            UrunAdi = "Seramik",
                            UrunFiyati = 340m,
                            UrunFoto = "seramik.jpg",
                            UrunKodu = "D-0004"
                        },
                        new
                        {
                            Id = 13,
                            Aciklama = "Seramik",
                            KategoriId = 3,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9510),
                            StokAdeti = 3300,
                            StokAdetiBirimi = "m3",
                            UrunAdi = "Fayans",
                            UrunFiyati = 280m,
                            UrunFoto = "fayans.png",
                            UrunKodu = "D-0005"
                        },
                        new
                        {
                            Id = 14,
                            Aciklama = "Ahşap",
                            KategoriId = 3,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9511),
                            StokAdeti = 4000,
                            StokAdetiBirimi = "m3",
                            UrunAdi = "Laminant Parke",
                            UrunFiyati = 450m,
                            UrunFoto = "laminant.jpg",
                            UrunKodu = "D-0006"
                        },
                        new
                        {
                            Id = 15,
                            Aciklama = "Kahverengi Renk",
                            KategoriId = 4,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9513),
                            StokAdeti = 100,
                            StokAdetiBirimi = "Adet",
                            UrunAdi = "Ahşap Kapı",
                            UrunFiyati = 2000m,
                            UrunFoto = "ahşap kapı.jpg",
                            UrunKodu = "K-0001"
                        },
                        new
                        {
                            Id = 16,
                            Aciklama = "Gri Renk",
                            KategoriId = 4,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9515),
                            StokAdeti = 100,
                            StokAdetiBirimi = "Adet",
                            UrunAdi = "Çelik Kapı",
                            UrunFiyati = 2500m,
                            UrunFoto = "çelik kapı.jpg",
                            UrunKodu = "K-0002"
                        },
                        new
                        {
                            Id = 17,
                            Aciklama = "Çift Açılım",
                            KategoriId = 4,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9517),
                            StokAdeti = 200,
                            StokAdetiBirimi = "Adet",
                            UrunAdi = "PVC Pencere",
                            UrunFiyati = 1900m,
                            UrunFoto = "pvc pencere.jpg",
                            UrunKodu = "K-0003"
                        },
                        new
                        {
                            Id = 18,
                            Aciklama = "Giyotin",
                            KategoriId = 4,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9518),
                            StokAdeti = 230,
                            StokAdetiBirimi = "Adet",
                            UrunAdi = "Ahşap Pencere",
                            UrunFiyati = 2500m,
                            UrunFoto = "ahşap pencere.jpg",
                            UrunKodu = "K-0004"
                        },
                        new
                        {
                            Id = 19,
                            Aciklama = "Fonksiyonel",
                            KategoriId = 4,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9520),
                            StokAdeti = 4003,
                            StokAdetiBirimi = "Adet",
                            UrunAdi = "Menteşe",
                            UrunFiyati = 6m,
                            UrunFoto = "menteşe.jpg",
                            UrunKodu = "K-0005"
                        },
                        new
                        {
                            Id = 20,
                            Aciklama = "Asma",
                            KategoriId = 1,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9522),
                            StokAdeti = 400,
                            StokAdetiBirimi = "Adet",
                            UrunAdi = "Kilit",
                            UrunFiyati = 70m,
                            UrunFoto = "kilit.jpg",
                            UrunKodu = "K-0006"
                        },
                        new
                        {
                            Id = 21,
                            Aciklama = "Krom Kaplama",
                            KategoriId = 4,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9524),
                            StokAdeti = 280,
                            StokAdetiBirimi = "Adet",
                            UrunAdi = "Kulp",
                            UrunFiyati = 30m,
                            UrunFoto = "kapı kulp.jpg",
                            UrunKodu = "K-0007"
                        },
                        new
                        {
                            Id = 22,
                            Aciklama = "Plastik Boya",
                            KategoriId = 5,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9526),
                            StokAdeti = 200,
                            StokAdetiBirimi = "Adet",
                            UrunAdi = "Plastik Boya",
                            UrunFiyati = 50m,
                            UrunFoto = "plastik boya.jpg",
                            UrunKodu = "BK-0001"
                        },
                        new
                        {
                            Id = 23,
                            Aciklama = "Silikonlu Boya",
                            KategoriId = 5,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9527),
                            StokAdeti = 250,
                            StokAdetiBirimi = "Adet",
                            UrunAdi = "Silikonlu Boya",
                            UrunFiyati = 80m,
                            UrunFoto = "silikonlu boya.jpg",
                            UrunKodu = "BK-0002"
                        },
                        new
                        {
                            Id = 24,
                            Aciklama = "Saten Boya",
                            KategoriId = 5,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9530),
                            StokAdeti = 4000,
                            StokAdetiBirimi = "Adet",
                            UrunAdi = "Dekoratif Kaplama",
                            UrunFiyati = 140m,
                            UrunFoto = "dekoratif kaplama.jpg",
                            UrunKodu = "BK-0003"
                        },
                        new
                        {
                            Id = 25,
                            Aciklama = "Meşe",
                            KategoriId = 6,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9533),
                            StokAdeti = 5000,
                            StokAdetiBirimi = "m3",
                            UrunAdi = "Kereste",
                            UrunFiyati = 160m,
                            UrunFoto = "kereste.jpg",
                            UrunKodu = "A-0001"
                        },
                        new
                        {
                            Id = 26,
                            Aciklama = "Filmli",
                            KategoriId = 6,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9536),
                            StokAdeti = 4000,
                            StokAdetiBirimi = "m3",
                            UrunAdi = "Plywood",
                            UrunFiyati = 280m,
                            UrunFoto = "plywood.jpg",
                            UrunKodu = "A-0002"
                        },
                        new
                        {
                            Id = 27,
                            Aciklama = "MDF Lam",
                            KategoriId = 6,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9537),
                            StokAdeti = 3900,
                            StokAdetiBirimi = "m3",
                            UrunAdi = "MDF",
                            UrunFiyati = 200m,
                            UrunFoto = "mdf.jpg",
                            UrunKodu = "A-0003"
                        },
                        new
                        {
                            Id = 28,
                            Aciklama = "Turuncu Renk",
                            KategoriId = 6,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9539),
                            StokAdeti = 2800,
                            StokAdetiBirimi = "m3",
                            UrunAdi = "Sunta",
                            UrunFiyati = 80m,
                            UrunFoto = "sunta.jpg",
                            UrunKodu = "A-0004"
                        },
                        new
                        {
                            Id = 29,
                            Aciklama = "Çok Telli",
                            KategoriId = 7,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9542),
                            StokAdeti = 1500,
                            StokAdetiBirimi = "Metre",
                            UrunAdi = "NYA Kablo",
                            UrunFiyati = 40m,
                            UrunFoto = "nya kablo.jpg",
                            UrunKodu = "E-00001"
                        },
                        new
                        {
                            Id = 30,
                            Aciklama = "G4",
                            KategoriId = 7,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9545),
                            StokAdeti = 900,
                            StokAdetiBirimi = "Adet",
                            UrunAdi = "Duy Priz",
                            UrunFiyati = 25m,
                            UrunFoto = "duy priz.jpg",
                            UrunKodu = "E-0002"
                        },
                        new
                        {
                            Id = 31,
                            Aciklama = "Komülatör",
                            KategoriId = 7,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9547),
                            StokAdeti = 800,
                            StokAdetiBirimi = "Adet",
                            UrunAdi = "Anahtar",
                            UrunFiyati = 15m,
                            UrunFoto = "anahtar.jpg",
                            UrunKodu = "E-0003"
                        },
                        new
                        {
                            Id = 32,
                            Aciklama = "Beyaz Renk",
                            KategoriId = 7,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9550),
                            StokAdeti = 1000,
                            StokAdetiBirimi = "Adet",
                            UrunAdi = "Led Ampul",
                            UrunFiyati = 80m,
                            UrunFoto = "led ampul.jpg",
                            UrunKodu = "E-0004"
                        },
                        new
                        {
                            Id = 33,
                            Aciklama = "PLC 2 Pinli",
                            KategoriId = 7,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9552),
                            StokAdeti = 600,
                            StokAdetiBirimi = "Adet",
                            UrunAdi = "Florasan Lamba",
                            UrunFiyati = 40m,
                            UrunFoto = "florasan.jpg",
                            UrunKodu = "E-0005"
                        },
                        new
                        {
                            Id = 34,
                            Aciklama = "250mm",
                            KategoriId = 8,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9556),
                            StokAdeti = 700,
                            StokAdetiBirimi = "Metre",
                            UrunAdi = "PVC Boru",
                            UrunFiyati = 20m,
                            UrunFoto = "pcv boru.jpg",
                            UrunKodu = "S-0001"
                        },
                        new
                        {
                            Id = 35,
                            Aciklama = "Uzun Musluk",
                            KategoriId = 8,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9559),
                            StokAdeti = 1000,
                            StokAdetiBirimi = "Adet",
                            UrunAdi = "Musluk",
                            UrunFiyati = 190m,
                            UrunFoto = "musluk.jpg",
                            UrunKodu = "S-0002"
                        },
                        new
                        {
                            Id = 36,
                            Aciklama = "Krom Menfez",
                            KategoriId = 8,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9561),
                            StokAdeti = 400,
                            StokAdetiBirimi = "Adet",
                            UrunAdi = "Menfez",
                            UrunFiyati = 50m,
                            UrunFoto = "menfez.jpg",
                            UrunKodu = "S-0003"
                        },
                        new
                        {
                            Id = 37,
                            Aciklama = "Plastik Köşebent",
                            KategoriId = 9,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9563),
                            StokAdeti = 1900,
                            StokAdetiBirimi = "Adet",
                            UrunAdi = "Köşebent",
                            UrunFiyati = 4m,
                            UrunFoto = "köşebent.jpg",
                            UrunKodu = "M-0001"
                        },
                        new
                        {
                            Id = 38,
                            Aciklama = "Germe Civatası",
                            KategoriId = 9,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9565),
                            StokAdeti = 1450,
                            StokAdetiBirimi = "Adet",
                            UrunAdi = "Civata",
                            UrunFiyati = 1m,
                            UrunFoto = "civata.jpg",
                            UrunKodu = "M-0002"
                        },
                        new
                        {
                            Id = 39,
                            Aciklama = "Düz Rondela",
                            KategoriId = 9,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9566),
                            StokAdeti = 1400,
                            StokAdetiBirimi = "Adet",
                            UrunAdi = "Rondela",
                            UrunFiyati = 2m,
                            UrunFoto = "rondela.jpg",
                            UrunKodu = "M-0003"
                        },
                        new
                        {
                            Id = 40,
                            Aciklama = "Demir Çekiç",
                            KategoriId = 10,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9569),
                            StokAdeti = 60,
                            StokAdetiBirimi = "Adet",
                            UrunAdi = "Çekiç",
                            UrunFiyati = 100m,
                            UrunFoto = "çekiç.jpg",
                            UrunKodu = "EM-0001"
                        },
                        new
                        {
                            Id = 41,
                            Aciklama = "Yıldız Tornavida",
                            KategoriId = 10,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9571),
                            StokAdeti = 100,
                            StokAdetiBirimi = "Adet",
                            UrunAdi = "Tornavida",
                            UrunFiyati = 30m,
                            UrunFoto = "tornavida.jpg",
                            UrunKodu = "EM-0002"
                        },
                        new
                        {
                            Id = 42,
                            Aciklama = "KargaBurun Pense",
                            KategoriId = 10,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9572),
                            StokAdeti = 40,
                            StokAdetiBirimi = "Adet",
                            UrunAdi = "Pense",
                            UrunFiyati = 50m,
                            UrunFoto = "pense.jpg",
                            UrunKodu = "EM-0003"
                        },
                        new
                        {
                            Id = 43,
                            Aciklama = "Darbeli Matkap",
                            KategoriId = 10,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9574),
                            StokAdeti = 20,
                            StokAdetiBirimi = "Adet",
                            UrunAdi = "Matkap",
                            UrunFiyati = 200m,
                            UrunFoto = "matkap.jpg",
                            UrunKodu = "EM-0004"
                        },
                        new
                        {
                            Id = 44,
                            Aciklama = "Demir Testere",
                            KategoriId = 10,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9576),
                            StokAdeti = 50,
                            StokAdetiBirimi = "Adet",
                            UrunAdi = "Testere",
                            UrunFiyati = 100m,
                            UrunFoto = "testere.jpg",
                            UrunKodu = "EM-0005"
                        },
                        new
                        {
                            Id = 45,
                            Aciklama = "Sabit",
                            KategoriId = 10,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9578),
                            StokAdeti = 5,
                            StokAdetiBirimi = "Adet",
                            UrunAdi = "Beton Mikseri",
                            UrunFiyati = 13000m,
                            UrunFoto = "beton mikseri.jpg",
                            UrunKodu = "EM-0006"
                        },
                        new
                        {
                            Id = 46,
                            Aciklama = "Endistriyel",
                            KategoriId = 10,
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(9580),
                            StokAdeti = 5,
                            StokAdetiBirimi = "Adet",
                            UrunAdi = "Taş Kesme Makinası",
                            UrunFiyati = 5000m,
                            UrunFoto = "taş kesme makinası.jpg",
                            UrunKodu = "EM-0007"
                        });
                });

            modelBuilder.Entity("UmutYapi.Models.Tablolar.UrunKategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("KategoriAdi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UrunKategoriler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            KategoriAdi = "Beton",
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(8890)
                        },
                        new
                        {
                            Id = 2,
                            KategoriAdi = "Yalıtım",
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(8901)
                        },
                        new
                        {
                            Id = 3,
                            KategoriAdi = "DuvarDöseme",
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(8903)
                        },
                        new
                        {
                            Id = 4,
                            KategoriAdi = "KapıPencere",
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(8905)
                        },
                        new
                        {
                            Id = 5,
                            KategoriAdi = "BoyaKaplama",
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(8906)
                        },
                        new
                        {
                            Id = 6,
                            KategoriAdi = "AhşapMarangoz",
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(8907)
                        },
                        new
                        {
                            Id = 7,
                            KategoriAdi = "Elektrik",
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(8908)
                        },
                        new
                        {
                            Id = 8,
                            KategoriAdi = "SıhhiTesisat",
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(8909)
                        },
                        new
                        {
                            Id = 9,
                            KategoriAdi = "Metal",
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(8910)
                        },
                        new
                        {
                            Id = 10,
                            KategoriAdi = "ELveMakina",
                            OlusturmaTarihi = new DateTime(2024, 6, 1, 22, 19, 54, 438, DateTimeKind.Local).AddTicks(8911)
                        });
                });

            modelBuilder.Entity("UmutYapi.Models.Tablolar.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("UmutYapi.Models.Tablolar.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("UmutYapi.Models.Tablolar.Kullanici", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("UmutYapi.Models.Tablolar.Kullanici", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("UmutYapi.Models.Tablolar.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UmutYapi.Models.Tablolar.Kullanici", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("UmutYapi.Models.Tablolar.Kullanici", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UmutYapi.Models.Tablolar.Kullanici", b =>
                {
                    b.HasOne("UmutYapi.Models.Tablolar.Sepet", "Sepet")
                        .WithOne("Kullanici")
                        .HasForeignKey("UmutYapi.Models.Tablolar.Kullanici", "SepetId");

                    b.Navigation("Sepet");
                });

            modelBuilder.Entity("UmutYapi.Models.Tablolar.SepetItem", b =>
                {
                    b.HasOne("UmutYapi.Models.Tablolar.Sepet", "Sepet")
                        .WithMany("SepetItems")
                        .HasForeignKey("SepetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Sepet");
                });

            modelBuilder.Entity("UmutYapi.Models.Tablolar.Siparis", b =>
                {
                    b.HasOne("UmutYapi.Models.Tablolar.Kullanici", "Kullanici")
                        .WithMany("Siparisler")
                        .HasForeignKey("KullaniciId");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("UmutYapi.Models.Tablolar.SiparisItem", b =>
                {
                    b.HasOne("UmutYapi.Models.Tablolar.Siparis", "Siparis")
                        .WithMany("SiparisItems")
                        .HasForeignKey("SiparisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Siparis");
                });

            modelBuilder.Entity("UmutYapi.Models.Tablolar.Urun", b =>
                {
                    b.HasOne("UmutYapi.Models.Tablolar.UrunKategori", "Kategori")
                        .WithMany("Urunler")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("UmutYapi.Models.Tablolar.Kullanici", b =>
                {
                    b.Navigation("Siparisler");
                });

            modelBuilder.Entity("UmutYapi.Models.Tablolar.Sepet", b =>
                {
                    b.Navigation("Kullanici")
                        .IsRequired();

                    b.Navigation("SepetItems");
                });

            modelBuilder.Entity("UmutYapi.Models.Tablolar.Siparis", b =>
                {
                    b.Navigation("SiparisItems");
                });

            modelBuilder.Entity("UmutYapi.Models.Tablolar.UrunKategori", b =>
                {
                    b.Navigation("Urunler");
                });
#pragma warning restore 612, 618
        }
    }
}
